{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ransel/react/NEXTJS/meetups/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: meetupData,\n      title: \"A first meetup\",\n      address: \"Some street 7, Some city\",\n      description: \"This is the first meetup \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default MeetupDetailPage;\nexport async function getStaticPaths() {\n  //connect to db\n  const client = await MongoClient.connect(\"mongodb+srv://ranselorm:Viohqkk5bBHlIjGY@cluster0.aqjx3qb.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetups);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data from an db\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://ranselorm:Viohqkk5bBHlIjGY@cluster0.aqjx3qb.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}","map":{"version":3,"sources":["/home/ransel/react/NEXTJS/meetups/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailPage","props","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","console","log","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEC,UADT;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,OAAO,EAAC,0BAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAXD;;AAaA,eAAeF,gBAAf;AAEA,OAAO,eAAeG,cAAf,GAAgC;AACrC;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,2GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAL,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACR,GAAP,CAAWW,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMjB,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,2GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMW,MAAM,GAAG,MAAMZ,iBAAiB,CAACkB,OAAlB,CAA0B;AAAEd,IAAAA,GAAG,EAAEU;AAAP,GAA1B,CAArB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAf,EAAAA,MAAM,CAACW,KAAP;AACA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEiB;AADP;AADF,GAAP;AAKD","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst MeetupDetailPage = (props) => {\n  return (\n    <>\n      <MeetupDetail\n        image={meetupData}\n        title=\"A first meetup\"\n        address=\"Some street 7, Some city\"\n        description=\"This is the first meetup \"\n      />\n    </>\n  );\n};\n\nexport default MeetupDetailPage;\n\nexport async function getStaticPaths() {\n  //connect to db\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ranselorm:Viohqkk5bBHlIjGY@cluster0.aqjx3qb.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  console.log(meetups);\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  //fetch data from an db\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ranselorm:Viohqkk5bBHlIjGY@cluster0.aqjx3qb.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({ _id: meetupId });\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetupData: meetup,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}